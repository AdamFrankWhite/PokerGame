// #1

i) First tried doing UI btn conditionals on on actual button components - big issues with rerendering and complicatied conditionals
ii) added useEffect to check which buttons to show following each time the play updated via prevAction state
iii) moved logic to separate function

// #2

When folding continuously, sometimes updateGameplay fires, messing up UI, sometimes doesn't

i) Found problem in useEffect for computer initiatehand as sb, in BettingUI
ii) it is the async nature - useEffect hook not waiting for array dependency to finish
TRY to solve issue without using useEffect?

// #3

After moving updateGameState functionality, bug of changing gameState too many times, using changing player to check
Fix: reset player turn to "" after gameState reducer changes

// #4

When beginning next gameState, issue of computer having two gos in a row, eg. check, then going first next gameState. Solved by automatically setting playerTurn to "" at end of each stage, before changing back to "computer" at start of next stage. useEffect accomplishes this nicely


// #5

When human checks as bb OOP, computer bets before its turn
Fix: When checking to see whether to move to next gameState, changed conditional to make sure when to fire 


What I have learnt:

iterating through and improving is way to go, better to plan ahead clearly, rather that jump into problem - leads to messier code and lots of delays
i.e. i had convulated, buggy, multiple areas dealing with state, then i realised i could simplify things - instead of using same updateGameplay function for both players, which caused lots of headaches when changing smallBlind, etc, so gave separate gamePlay functions and stopped updating player all over the place. Fixed it pretty quickly and simply

## fix smallblind chips subtraction issue when folding
fix: the current computer chips being sent to action did not include the immediately won hand, so added on pot, see BettingUI 275